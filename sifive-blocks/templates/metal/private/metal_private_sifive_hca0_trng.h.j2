/* Copyright 2020 SiFive, Inc */
/* SPDX-License-Identifier: Apache-2.0 */

#ifndef METAL__DRIVERS__SIFIVE_HCA0_TRNG_H
#define METAL__DRIVERS__SIFIVE_HCA0_TRNG_H

{% include 'template_comment.h.j2' %}

#include <metal/interrupt.h>
#include <metal/platform.h>
#include <stdbool.h>
#include <stddef.h>

{% if 'sifive,hca0' in devices %}
{% set sifive_hca0s = devices['sifive,hca0'] %}

/**
 * Structure type to access TRNG control (TRNG_CR)
 */
typedef union _HCA_TRNG_CR {
    struct {
        uint32_t HTSTART:1;        /**< bit:      0  Health tests start */
        uint32_t RNDIRQEN:1;       /**< bit:      1  Random IRQ enable */
        uint32_t HTIRQEN:1;        /**< bit:      2  Health Tests IRQ enable */
        uint32_t BURSTEN:1;        /**< bit:      3  Burst mode enable */
        uint32_t _reserved0:4;     /**< bit:   4..7  (reserved) */
        uint32_t STARTOSCTEST:1;   /**< bit:      8  Oscillator test start */
        uint32_t _reserved1:7;     /**< bit:  9..15  (reserved) */
        uint32_t OSCTESTCNT:4;     /**< bit: 16..19  Oscillator test counter */
        uint32_t _reserved2:12;    /**< bit: 20..31  (reserved) */
    } b;                           /**< Structure used for bit access */
    uint32_t w;                    /**< Structure used for word access */
} HCA_TRNG_CR_Type;

/* HCA TRNG control */
#define HCA_TRNG_CR_HTSTART_Pos           0U                                       /**< HCA TRNG_CR: Health tests start Position */
#define HCA_TRNG_CR_HTSTART_Msk           (1U << HCA_TRNG_CR_HTSTART_Pos)          /**< HCA TRNG_CR: Health tests start Mask */

#define HCA_TRNG_CR_RNDIRQEN_Pos          1U                                       /**< HCA TRNG_CR: Random IRQ enable Position */
#define HCA_TRNG_CR_RNDIRQEN_Msk          (1U << HCA_TRNG_CR_RNDIRQEN_Pos)         /**< HCA TRNG_CR: Random IRQ enable Mask */

#define HCA_TRNG_CR_HTIRQEN_Pos           2U                                       /**< HCA TRNG_CR: Health Tests IRQ enable Position */
#define HCA_TRNG_CR_HTIRQEN_Msk           (1U << HCA_TRNG_CR_HTIRQEN_Pos)          /**< HCA TRNG_CR: Health Tests IRQ enable Mask */

#define HCA_TRNG_CR_BURSTEN_Pos           3U                                       /**< HCA TRNG_CR: Burst mode enable Position */
#define HCA_TRNG_CR_BURSTEN_Msk           (1U << HCA_TRNG_CR_BURSTEN_Pos)          /**< HCA TRNG_CR: Burst mode enable Mask */

#define HCA_TRNG_CR_STARTOSCTEST_Pos      8U                                       /**< HCA TRNG_CR: Oscillator test start Position */
#define HCA_TRNG_CR_STARTOSCTEST_Msk      (1U << HCA_TRNG_CR_STARTOSCTEST_Pos)     /**< HCA TRNG_CR: Oscillator test start Mask */

#define HCA_TRNG_CR_OSCTESTCNT_Pos        16U                                      /**< HCA TRNG_CR: Oscillator test counter Position */
#define HCA_TRNG_CR_OSCTESTCNT_Msk        (0xFU << HCA_TRNG_CR_OSCTESTCNT_Pos)     /**< HCA TRNG_CR: Oscillator test counter Mask */

/**
 * Structure type to access TRNG status (TRNG_SR)
 */
typedef union _HCA_TRNG_SR {
    struct {
        uint32_t RNDRDY:1;         /**< bit:      0  32-bit random data is ready to read from TRNG_DATA register */
        uint32_t SRCS:1;           /**< bit:      1  Entropy source status (0:running, 1:failed) */
        uint32_t HTR:1;            /**< bit:      2  Health test ready (0:done, 1:on-going) */
        uint32_t HTS:1;            /**< bit:      3  Health test status (0:pass, 1:fail) */
        uint32_t _reserved0:4;     /**< bit:   4..7  (reserved) */
        uint32_t ADAPFAIL:1;       /**< bit:      8  Adaptative test failing bit */
        uint32_t REPFAIL:1;        /**< bit:      9  Repetition test failing bit */
        uint32_t OSCTESTDONE:1;    /**< bit:     10  Osc Test Done */
        uint32_t _reserved1:21;    /**< bit: 11..31  (reserved) */
    } b;                           /**< Structure used for bit access */
    uint32_t w;                    /**< Structure used for word access */
} HCA_TRNG_SR_Type;

/* HCA TRNG status */
#define HCA_TRNG_SR_RNDRDY_Pos            0U                                       /**< HCA TRNG_SR: 32-bit random data is ready to read from TRNG_DATA register Position */
#define HCA_TRNG_SR_RNDRDY_Msk            (1U << HCA_TRNG_SR_RNDRDY_Pos)           /**< HCA TRNG_SR: 32-bit random data is ready to read from TRNG_DATA register Mask */

#define HCA_TRNG_SR_SRCS_Pos              1U                                       /**< HCA TRNG_SR: Entropy source status (0:running, 1:failed) Position */
#define HCA_TRNG_SR_SRCS_Msk              (1U << HCA_TRNG_SR_SRCS_Pos)             /**< HCA TRNG_SR: Entropy source status (0:running, 1:failed) Mask */

#define HCA_TRNG_SR_HTR_Pos               2U                                       /**< HCA TRNG_SR: Health test ready (0:done, 1:on-going) Position */
#define HCA_TRNG_SR_HTR_Msk               (1U << HCA_TRNG_SR_HTR_Pos)              /**< HCA TRNG_SR: Health test ready (0:done, 1:on-going) Mask */

#define HCA_TRNG_SR_HTS_Pos               3U                                       /**< HCA TRNG_SR: Health test status (0:pass, 1:fail) Position */
#define HCA_TRNG_SR_HTS_Msk               (1U << HCA_TRNG_SR_HTS_Pos)              /**< HCA TRNG_SR: Health test status (0:pass, 1:fail) Mask */

#define HCA_TRNG_SR_ADAPFAIL_Pos          8U                                       /**< HCA TRNG_SR: Adaptative test failing bit Position */
#define HCA_TRNG_SR_ADAPFAIL_Msk          (1U << HCA_TRNG_SR_ADAPFAIL_Pos)         /**< HCA TRNG_SR: Adaptative test failing bit Mask */

#define HCA_TRNG_SR_REPFAIL_Pos           9U                                       /**< HCA TRNG_SR: Repetition test failing bit Position */
#define HCA_TRNG_SR_REPFAIL_Msk           (1U << HCA_TRNG_SR_REPFAIL_Pos)          /**< HCA TRNG_SR: Repetition test failing bit Mask */

#define HCA_TRNG_SR_OSCTESTDONE_Pos       10U                                      /**< HCA TRNG_SR: Osc Test Done Position */
#define HCA_TRNG_SR_OSCTESTDONE_Msk       (1U << HCA_TRNG_SR_OSCTESTDONE_Pos)      /**< HCA TRNG_SR: Osc Test Done Mask */

/* HCA TRNG data */
#define HCA_TRNG_DATA_DATA_Pos            0U                                       /**< HCA TRNG_DATA: Data register Position */
#define HCA_TRNG_DATA_DATA_Msk            0xFFFFFFFFU                              /**< HCA TRNG_DATA: Data register Mask */

/**
 * Structure type to access TRNG trim (TRNG_TRIM)
 */
typedef union _HCA_TRNG_TRIM {
    struct {
        uint32_t TRIM:27;          /**< bit:  0..26  TRNG trim value */
        uint32_t _reserved0:4;     /**< bit: 27..30  (reserved) */
        uint32_t LOCK:1;           /**< bit:     31  TRNG trim lock (0:RW, 1:R) */
    } b;                           /**< Structure used for bit access */
    uint32_t w;                    /**< Structure used for word access */
} HCA_TRNG_TRIM_Type;

/* HCA TRNG trim */
#define HCA_TRNG_TRIM_TRIM_Pos            0U                                       /**< HCA TRNG_TRIM: Trim value Position */
#define HCA_TRNG_TRIM_TRIM_Msk            (0x7FFFFFFU << HCA_TRNG_TRIM_TRIM_Pos)   /**< HCA TRNG_TRIM: Trim value Mask */

#define HCA_TRNG_TRIM_LOCK_Pos            31U                                      /**< HCA TRNG_TRIM: Trim lock (0:RW, 1:R) Position */
#define HCA_TRNG_TRIM_LOCK_Msk            (1U << HCA_TRNG_TRIM_LOCK_Pos)           /**< HCA TRNG_TRIM: Trim lock (0:RW, 1:R) Mask */

/* HCA TRNG osc1 counter */
#define HCA_TRNG_OSC1_CNT_OSC1CNT_Pos     0U                                       /**< HCA TRNG_OSC1_CNT: OSC1 counter register Position */
#define HCA_TRNG_OSC1_CNT_OSC1CNT_Msk     0xFFFFFFFFU                              /**< HCA TRNG_OSC1_CNT: OSC1 counter register Mask */

/* HCA TRNG osc1 counter */
#define HCA_TRNG_OSC2_CNT_OSC2CNT_Pos     0U                                       /**< HCA TRNG_OSC2_CNT: OSC2 counter register Position */
#define HCA_TRNG_OSC2_CNT_OSC2CNT_Msk     0xFFFFFFFFU                              /**< HCA TRNG_OSC2_CNT: OSC2 counter register Mask */

/* HCA TRNG osc1 snapshot */
#define HCA_TRNG_OSC1_SNAP_OSC1SNAP_Pos   0U                                       /**< HCA TRNG_OSC1_SNAP: OSC1 snapshot register Position */
#define HCA_TRNG_OSC1_SNAP_OSC1SNAP_Msk   0xFFFFFFFFFFFFFFFFU                      /**< HCA TRNG_OSC1_SNAP: OSC1 snapshot register Mask */

/* HCA TRNG osc2 snapshot */
#define HCA_TRNG_OSC2_SNAP_OSC2SNAP_Pos   0U                                       /**< HCA TRNG_OSC2_SNAP: OSC2 snapshot register Position */
#define HCA_TRNG_OSC2_SNAP_OSC2SNAP_Msk   0xFFFFFFFFFFFFFFFFU                      /**< HCA TRNG_OSC2_SNAP: OSC2 snapshot register Mask */

{% endif %}

#endif /* METAL__DRIVERS__SIFIVE_HCA0_TRNG_H */
